name: Laravel Tests

on:
  pull_request:
    branches:
      - master
      - develop

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/master' && 'prod' || 'test' }}
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ secrets.DB_DATABASE }}
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, pgsql, pdo_pgsql
          coverage: none

      - name: Copy .env
        run: cp .env.example .env

      - name: Install Composer Dependencies
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            composer install --no-dev --optimize-autoloader --no-interaction --no-progress
          else
            composer install --no-interaction --no-progress
          fi

      - name: Generate key
        run: php artisan key:generate

      - name: Set Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Run Database Migrations
        run: php artisan migrate --force
        env:
          DB_CONNECTION: pgsql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

      - name: Run Tests
        if: github.ref != 'refs/heads/master'
        run: php artisan test
        env:
          DB_CONNECTION: pgsql
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ vars.DB_PORT }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }} 